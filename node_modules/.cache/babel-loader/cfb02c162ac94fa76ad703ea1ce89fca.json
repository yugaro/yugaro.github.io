{"ast":null,"code":"var _jsxFileName = \"/Users/yuga/Yu-legance/test01/src/components/Main/ContactForm/ContactForm.js\";\nimport React from 'react';\nimport './ContactForm.css';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: false,\n      email: '',\n      hasEmailError: false,\n\n      /* contentとhasContentErrorというstateを追加してください */\n      content: '',\n      hasContentError: false\n    };\n  }\n\n  handleEmailChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      email: inputValue,\n      hasEmailError: isEmpty\n    });\n  }\n  /* handleContentChangeという名前のメソッドを定義してください */\n\n\n  handleContentChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      content: inputValue,\n      hasContentError: isEmpty\n    });\n  }\n\n  handleSubmit() {\n    this.setState({\n      isSubmitted: true\n    });\n  }\n\n  render() {\n    let emailErrorText;\n\n    if (this.state.hasEmailError) {\n      emailErrorText = /*#__PURE__*/React.createElement(\"p\", {\n        className: \"contact-message-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\");\n    }\n    /* 変数contentErrorTextを定義してください */\n\n\n    let contentErrorText;\n    /* hasContentErrorを条件にしたif文を作成してください */\n\n    if (this.state.hasContentError) {\n      contentErrorText = /*#__PURE__*/React.createElement(\"p\", {\n        className: \"contact-message-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, \"\\u304A\\u554F\\u3044\\u5408\\u308F\\u305B\\u5185\\u5BB9\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\");\n    }\n\n    let contactForm;\n\n    if (this.state.isSubmitted) {\n      contactForm = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contact-submit-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, \"\\u9001\\u4FE1\\u5B8C\\u4E86\");\n    } else {\n      contactForm = /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: () => {\n          this.handleSubmit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"e-mail adress\"), /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.email,\n        onChange: event => {\n          this.handleEmailChange(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }), emailErrorText, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \"contents\"), /*#__PURE__*/React.createElement(\"textarea\", {\n        value: this.state.content,\n        onChange: event => {\n          this.handleContentChange(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), contentErrorText, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, contactForm);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/yuga/Yu-legance/test01/src/components/Main/ContactForm/ContactForm.js"],"names":["React","ContactForm","Component","constructor","props","state","isSubmitted","email","hasEmailError","content","hasContentError","handleEmailChange","event","inputValue","target","value","isEmpty","setState","handleContentChange","handleSubmit","render","emailErrorText","contentErrorText","contactForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ContactForm.css';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitted: false,\n      email: '',\n      hasEmailError: false,\n      /* contentとhasContentErrorというstateを追加してください */\n      content:'',\n      hasContentError:false\n    };\n  }\n\n  handleEmailChange(event) {\n    const inputValue = event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      email: inputValue,\n      hasEmailError: isEmpty,\n    });\n  }\n\n  /* handleContentChangeという名前のメソッドを定義してください */\n  handleContentChange(event){\n    const inputValue=event.target.value;\n    const isEmpty = inputValue === '';\n    this.setState({\n      content:inputValue,\n      hasContentError:isEmpty\n    })\n  }\n\n  handleSubmit() {\n    this.setState({isSubmitted: true});\n  }\n\n  render() {\n    let emailErrorText;\n    if (this.state.hasEmailError) {\n      emailErrorText = (\n        <p className='contact-message-error'>\n          メールアドレスを入力してください\n        </p>\n      );\n    }\n\n    /* 変数contentErrorTextを定義してください */\n    let contentErrorText;\n\n    /* hasContentErrorを条件にしたif文を作成してください */\n    if (this.state.hasContentError) {\n      contentErrorText = (\n        <p className='contact-message-error'>\n          お問い合わせ内容を入力してください\n        </p>\n      );\n    }\n\n    let contactForm;\n    if (this.state.isSubmitted) {\n      contactForm = (\n        <div className='contact-submit-message'>\n          送信完了\n        </div>\n      );\n    } else {\n      contactForm = (\n        <form onSubmit={() => {this.handleSubmit()}} >\n          <p>e-mail adress</p>\n          <input\n            value={this.state.email}\n            onChange={(event) => {this.handleEmailChange(event)}}\n          />\n          {emailErrorText}\n          <p>contents</p>\n          {/* stateのvalueの値と、onChangeイベントを追加してください */}\n          <textarea\n            value={this.state.content}\n            onChange={(event) => {this.handleContentChange(event)}}\n          />\n          {/* contentErrorTextを表示してください */}\n          {contentErrorText}\n          <input\n            type='submit'\n            value='submit'\n          />\n        </form>\n      );\n    }\n\n    return (\n      <div className='contact-form'>\n        {contactForm}\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}